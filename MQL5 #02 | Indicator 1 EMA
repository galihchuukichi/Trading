//+------------------------------------------------------------------+
//|                                                 DELETE THIS2.mq5 |
//|                                        Copyright2023, Zona Corp. |
//|                                             https://www.mql5.com |
//+------------------------------------------------------------------+
#property copyright "Copyright2023, Zona Corp."
#property link      "https://www.mql5.com"
#property version   "1.00"
#property indicator_chart_window

#property indicator_buffers 1
#property indicator_plots 1

#property indicator_type1 DRAW_LINE
#property indicator_label1 "YOUR OWN MA"
#property indicator_color1 clrGold
#property indicator_style1 STYLE_SOLID
#property indicator_width1 3


double maBuff[];
int maHandle;
input int len = 200; // LENGTH : 
input ENUM_MA_METHOD tipe = MODE_EMA; // TYPE DATA : 

//+------------------------------------------------------------------+
//| Custom indicator initialization function                         |
//+------------------------------------------------------------------+
int OnInit()
  {
//--- indicator buffers mapping
   SetIndexBuffer(0,maBuff,INDICATOR_DATA);
   maHandle = iMA(Symbol(),Period(),len,0,tipe,PRICE_CLOSE);
   
//---
   return(INIT_SUCCEEDED);
  }
//+------------------------------------------------------------------+
//| Custom indicator iteration function                              |
//+------------------------------------------------------------------+
int OnCalculate(const int rates_total,
                const int prev_calculated,
                const datetime &time[],
                const double &open[],
                const double &high[],
                const double &low[],
                const double &close[],
                const long &tick_volume[],
                const long &volume[],
                const int &spread[])
  {
//---
   int idxNow = rates_total-1;
   if(rates_total < len)
      return (0);
   int copyBars = 0;
   if(BarsCalculated(maHandle) < len)
      return (0);
   if(prev_calculated <= 0)
      copyBars = rates_total;
   else
      copyBars = 1;
   
   if(CopyBuffer(maHandle,0,0,copyBars,maBuff) <= 0)
      return (0);
   Comment("maHandle : ", maBuff[idxNow]);
   
//--- return value of prev_calculated for next call
   return(rates_total);
  }
//+------------------------------------------------------------------+
